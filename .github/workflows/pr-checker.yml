# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Pull Request Checker

on:
  workflow_call:
env:
  TZ: 'Asia/Shanghai'

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      short-commit-hash: ${{ steps.env-setup.outputs.SHORT_COMMIT_HASH }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ vars.JAVA_CI_VERSION }}
          java-package: jdk
          architecture: x64
          cache: 'maven'

      - name: Codestyle Check
        run: mvn -B spotless:check --errors

      # Setup for the preview build
      - name: Environment Setup
        id: env-setup
        run: |
          SHORT_COMMIT_HASH=$(git rev-parse --short=8 ${{ github.sha }})
          JAR_VERSION="Preview Build #${{ github.event.number }}-$SHORT_COMMIT_HASH"
          echo "SHORT_COMMIT_HASH=$SHORT_COMMIT_HASH" >> "$GITHUB_ENV"
          echo "SHORT_COMMIT_HASH=$SHORT_COMMIT_HASH" >> "$GITHUB_OUTPUT"
          echo "JAR_VERSION=$JAR_VERSION" >> "$GITHUB_ENV"
          sed -i "0,/<version>[^<]*<\/version>/{s/<version>[^<]*<\/version>/<version>$JAR_VERSION<\/version>/}" pom.xml

      - name: Build with Maven
        run: mvn package -Dversioning.disable --errors

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: slimefun-${{ github.event.number }}-${{ env.SHORT_COMMIT_HASH }}
          path: 'target/Slimefun-${{ env.JAR_VERSION }}.jar'

  call-workflows:
    needs: [ build ]
    uses: ./.github/workflows/e2e-testing.yml
    with:
      artifact-name: slimefun-${{ github.event.number }}-${{ needs.build.outputs.short-commit-hash }}
